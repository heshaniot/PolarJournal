#include <math.h>
#include <matrix.h>
#include <mex.h>
#include <bitset> 
void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
  mexPrintf("Hello World!\n");

  	/*
	int M, N;
	double *In1, *In2, *In3, *Out1, *Out2;
 	
	// So to get back the 1d to 2 again. first we need to know the dims
	M = mxGetM(prhs[0]); // number of rows
	N = mxGetN(prhs[0]); // number of cols in input matrix

	In1 = mxGetPr(prhs[0]); // get pointer to the array 
 	*/
	const int n = 8;
	int i = 10;

	std::string i_bin = std::bitset<n>(i-1).to_string(); //to binary
	int lastlevel = 1;
	//mexPrintf("In bin: %s\n", i_bin);
	mexPrintf("looping over\n");
	for (lastlevel =1; lastlevel <= n; lastlevel++)
	{ 
		mexPrintf("%c", i_bin[lastlevel-1]);	
		if ( i_bin[lastlevel-1] == '1')
			mexPrintf("");
	}


}
 



